#!/usr/bin/env ruby

# sample/build-svn - build script for svn
#
# Copyright (C) 2006,2009 Tanaka Akira  <akr@fsij.org>
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. The name of the author may not be used to endorse or promote products
#     derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.

require 'chkbuild'

ChkBuild.limit(:data=>1024*1024*800, :as=>1024*1024*800)

ChkBuild.def_target("svn") {|b|
  dir = b.build_dir
  b.svn('http://svn.apache.org/repos/asf', 'subversion/trunk', 'subversion',
       :viewvc=>"http://svn.apache.org/viewvc?diff_format=u")
  Dir.chdir("subversion") {
    b.run("./autogen.sh")
    b.run("./configure", "--prefix=#{dir}")
    b.make
    b.run("subversion/svn/svn", "--version", :section=>'version', "ENV:LC_ALL"=>"C")
    b.run("subversion/svn/svn", "help", :section=>'help')
    b.make("install")
  }
}

ChkBuild.define_title_hook('svn', 'help') {|title, log|
  if /^Subversion command-line client, version (.*)\.$/ =~ log
    title.update_title(:version, "Subversion #{$1}")
  end
}

ChkBuild.define_diff_preprocess_gsub('svn', /^   compiled .*, \d\d:\d\d:\d\d$/) {
  '   compiled <time>'
}

ChkBuild.main
