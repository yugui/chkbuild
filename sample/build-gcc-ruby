#!/usr/bin/env ruby

require 'build'
require 'chkbuild/ruby'

ChkBuild.limit(:data=>1024*1024*600, :as=>1024*1024*600)

gcc = Build.def_target("gcc",
  ["trunk", "4.1", "4.0"],
  :old => 1) {|b, suffix|
  gcc_dir = b.build_dir
  gcc_branch = {
    "trunk"=>"trunk",
    "4.1"=>"branches/gcc-4_1-branch",
    "4.0"=>"branches/gcc-4_0-branch"
  }[suffix]
  Dir.chdir("..") {
    b.svn("svn://gcc.gnu.org/svn/gcc", gcc_branch, 'gcc',
      :viewcvs=>"http://gcc.gnu.org/viewcvs")
    # svn://gcc.gnu.org/svn/gcc/trunk
    # http://gcc.gnu.org/viewcvs/trunk/gcc/config/m68k/m68k.md?r1=115272&r2=115973
  }
  b.mkcd("objdir")
  b.run("../../gcc/configure", "--prefix=#{gcc_dir}", "--enable-languages=c", "--disable-shared", "--disable-multilib")
  b.make("bootstrap", "install", :timeout=>'5h')
  b.run("#{gcc_dir}/bin/gcc", '-v', :section=>'version')
}

gcc.add_title_hook('version') {|title, log|
  if /^gcc version (.*)$/ =~ log
    title.update_title(:version, "gcc #{$1}")
  end
}

gcc.add_diff_preprocess_gsub(
  /^(  transformation: [0-9.]+, building DFA: [0-9.]+|  DFA minimization: [0-9.]+, making insn equivalence: [0-9.]+| all automaton generation: [0-9.]+, output: [0-9.]+)$/) {|match|
  match[0].gsub(/[0-9.]+/, '<t>')
}

def_build_ruby(
  ["trunk", "1.8"],
  ["o0", "o1", nil, "o3"],
  [nil, "pth"],
  gcc,
  :old => 1,
  :separated_srcdir => true)

ChkBuild.main
