#!/usr/bin/env ruby

# sample/build-ruby3 - build script for ruby
#
# Copyright (C) 2011 Tanaka Akira  <akr@fsij.org>
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. The name of the author may not be used to endorse or promote products
#     derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.

require 'chkbuild'

ChkBuild.limit(:data=>1024*1024*2000, :as=>1024*1024*2000)

# ChkBuild.nickname identify chkbuild installation.
# It is used for title of HTML, etc.
# The default is the hostname (without domain).
# ChkBuild.nickname = 'nickname'

# ChkBuild.top_uri is used for RSS.
# ChkBuild.top_uri = "file://#{ChkBuild.public_top}/"
# ChkBuild.top_uri = nil # use relative URL

module CompleteOpts
end
def CompleteOpts.call(opts)
  ruby_branch = opts.fetch(:ruby_branch)
  if Util.opts2aryparam(opts, :configure_args).include?("--enable-pthread")
    if %r{\Abranches/ruby_1_8} !~ ruby_branch &&
       %r{\Abranches/matzruby} !~ ruby_branch
      return nil
    end
  end
  opts
end

ChkBuild::Ruby.def_target(
  [
    { :suffix_? => '-trunk', :ruby_branch => 'trunk', :output_interval_timeout => '10min' },
    { :suffix_? => '-1.9.2', :ruby_branch => 'branches/ruby_1_9_2' },
    { :suffix_? => '-1.8', :ruby_branch => 'branches/ruby_1_8' },
    { :suffix_? => '-1.8.7', :ruby_branch => 'branches/ruby_1_8_7' },
    { :suffix_? => '-1.8.6', :ruby_branch => 'branches/ruby_1_8_6' },
  ],
  { :use_rubyspec => true },

  # ChkBuild::Ruby::MaintainedBranches,
  # %w[trunk 1.8],
  # %w[trunk 1.9.2 1.9.1],
  # %w[1.9.1],
  # %w[trunk],

  # ['o0', 'o1', nil, 'o3', 'os'],

  #[
  #  { :suffix_? => '-o0', :optflags => %w[-O0] },
  #  { :suffix_? => '-o1', :optflags => %w[-O1] },
  #  {                     :optflags => %w[-O2] },
  #  { :suffix_? => '-o3', :optflags => %w[-O3] },
  #  { :suffix_? => '-os', :optflags => %w[-Os] },
  #],

  { :optflags => %w[-O2] },

  #[nil, "pth"],
  [
    {},
    { :suffix_? => '-pth', :configure_args_pthread => %w[--enable-pthread] }
  ],

  { :configure_args => [], :configure_args_valgrind => %w[--with-valgrind] },

  #['m32', 'm64'],
  #[
  #  {},
  #  { :suffix_? => '-m32', :cflags => ['-m32'], :dldflags => ['-m32'] },
  #  { :suffix_? => '-m64', :cflags => ['-m64'], :dldflags => ['-m64'] },
  #]

  :complete_options => CompleteOpts,
  #:complete_options => ChkBuild::Ruby::CompleteOptions,

  :autoconf_command => 'autoconf',
  :configure_args => [],
  :cflags => [],
  :cppflags => %w[-DRUBY_DEBUG_ENV],
  :optflags => %w[-O2],
  :debugflags => %w[-g],
  :warnflags => %w[-W -Wall -Wformat=2 -Wundef -Wno-parentheses -Wno-unused-parameter -Wno-missing-field-initializers],
  :dldflags => %w[],
  :make_options => {},
  :inplace_build => true,

  :old => 1,

  :timeout => '1h',

  :output_interval_timeout => '5min'
  )

ChkBuild.main
