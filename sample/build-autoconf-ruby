#!/usr/bin/env ruby

# sample/build-autoconf-ruby - build script for autoconf and ruby
#
# Copyright (C) 2005,2011 Tanaka Akira  <akr@fsij.org>
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  3. The name of the author may not be used to endorse or promote products
#     derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.

require 'chkbuild'

ChkBuild.limit(:data=>1024*1024*800, :as=>1024*1024*800)

def modify_file(filename)
  content = yield File.read(filename)
  open(filename, "w") {|f|
    f.print content
  }
end

Autoconf = ChkBuild.def_target("autoconf") {|b|
  dir = b.build_dir
  Dir.chdir("..") {
    b.gnu_savannah_cvs('autoconf', 'autoconf', nil)
  }
  b.mkcd("objdir")
  b.run("../../autoconf/configure", "--prefix=#{dir}")
  # modify Makefile to not use help2man.
  modify_file("Makefile") {|content|
    content.sub(/^SUBDIRS\s*=.*$/) { $&.sub(/ man /, ' ') }
  }
  b.make
  b.make("install")

  b.run("#{dir}/bin/autoconf", '--version', :section=>'version')
}

Autoconf.add_title_hook('version') {|title, log|
  case log
  when /^Autoconf version (.*)$/
    title.update_title(:version, "autoconf #{$1}")
  when /^autoconf \(GNU Autoconf\) (.*)$/
    title.update_title(:version, "autoconf #{$1}")
  end
}

ChkBuild::Ruby.def_target(
  ChkBuild::Ruby::MaintainedBranches,
  Autoconf,
  :inplace_build => false)

ChkBuild.main
